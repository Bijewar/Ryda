import mongoose from "mongoose";

const DriverSchema = new mongoose.Schema(
Â  {
Â  Â  firstName: { type: String, required: true },
Â  Â  lastName: { type: String, required: true },
Â  Â  email: { 
Â  Â  Â  type: String, 
Â  Â  Â  required: true, 
Â  Â  Â  unique: true,
Â  Â  Â  index: true 
Â  Â  },
Â  Â  password: { type: String, required: true },
Â  Â  phone: { type: String, required: true },
Â  Â  accountType: { 
Â  Â  Â  type: String, 
Â  Â  Â  enum: ["driver"], 
Â  Â  Â  default: "driver" 
Â  Â  },
Â  Â  driverLicense: { type: String, required: true },
Â  Â  vehicleModel: { type: String, required: true },
Â  Â  licensePlate: { type: String, required: true },
Â  Â  address: { type: String, required: true },
Â  Â  licenseFront: { type: String, required: true },
Â  Â  licenseBack: { type: String, required: true },
Â  Â  isApproved: { 
Â  Â  Â  type: Boolean, 
Â  Â  Â  default: false,
Â  Â  Â  index: true 
Â  Â  },
Â  Â  isActive: { 
Â  Â  Â  type: Boolean, 
Â  Â  Â  default: true,
Â  Â  Â  index: true 
Â  Â  },
Â  Â  approvedBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
Â  Â  approvedAt: { type: Date },
Â  Â  rejectedBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
Â  Â  rejectedAt: { type: Date },
Â  Â  rejectionReason: { type: String },
    // ðŸ›‘ START: Forgot Password Fields ðŸ›‘
    resetToken: { type: String },
    resetTokenExpiry: { type: Date },
    // ðŸ›‘ END: Forgot Password Fields ðŸ›‘
Â  },
Â  { 
Â  Â  timestamps: true,
Â  Â  collection: 'drivers',
Â  Â  toJSON: { virtuals: true }
Â  }
);

// Keep this compound index
DriverSchema.index({ createdAt: -1 });

DriverSchema.virtual('fullName').get(function() {
Â  return `${this.firstName} ${this.lastName}`;
});

DriverSchema.pre('save', function(next) {
Â  if (this.isModified('isApproved')) {
Â  Â  const now = new Date();
Â  Â  if (this.isApproved) {
Â  Â  Â  this.approvedAt = now;
Â  Â  Â  this.rejectedAt = undefined;
Â  Â  Â  this.rejectionReason = undefined;
Â  Â  } else if (this.isApproved === false && this.rejectionReason) {
Â  Â  Â  this.rejectedAt = now;
Â  Â  Â  this.approvedAt = undefined;
Â  Â  }
Â  }
Â  next();
});

export default mongoose.models.Driver || mongoose.model("Driver", DriverSchema);